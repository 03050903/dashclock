/*
 * Copyright 2013 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java'
jar.baseName = 'dashclock-api'

def Properties props = new Properties()
props.load(new FileInputStream(file('../local.properties')))

def android = [
        sdk: props["sdk.dir"],
        target: 'android-18'
]

task compileAidl << {
    FileTree aidls = fileTree('src/main/aidl').include('**/I*.aidl')
    aidls.each {File aidl ->
        def shell = ("aidl -p${android.sdk}/platforms/${android.target}/framework.aidl "
                    + "-I${file('src/main/aidl')} "
                    + "-o${file('build/source/aidl/debug')} "
                    + "${aidl.absolutePath}")
        def proc = shell.execute()
        proc.in.eachLine {line -> println line}
        proc.err.eachLine {line -> println 'stderr: ' + line}
        proc.waitFor()
    }
}

compileJava.dependsOn(compileAidl)

sourceSets {
    main {
        java {
            srcDir 'build/source/aidl/debug'
        }
    }
}

task javadoc(overwrite: true, dependsOn: 'jar') << {
    def shell = ("./javadoc-scripts/generate_javadoc.sh")
    def proc = shell.execute()
    proc.in.eachLine {line -> println line}
    proc.err.eachLine {line -> println 'stderr: ' + line}
    proc.waitFor()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    baseName = jar.baseName
    from sourceSets.main.allSource
    from fileTree('src/main/aidl').include('**/I*.aidl')
}

artifacts {
    archives sourcesJar
}

dependencies {
    compile files("${android.sdk}/platforms/${android.target}/android.jar")
}
